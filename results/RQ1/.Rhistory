theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
ggsave(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.pdf', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.pdf', sep=""), outfile=paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.pdf', sep=""))
ggsave(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.pdf', sep=""), plot = p, width = W, height = H, units = c("in"))
library(ggplot2)
library(hrbrthemes)
library(plotly)
library(viridis)
library(ggh4x)
library(scales)
IMG_DIR=("plots/")
# Tech/non-tech both datasets
W =  17
H =  7
data <- read.csv(file="input/tech_non_tech_both_datasets.csv", sep = ",")
data=data[data$metric != "MCC",]
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1", "nMCC"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
cols <-function(n) {
colorRampPalette(rev(c("forestgreen", "gold1", "tomato2", "red4", "red2")))(5)
}
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested_wrap(rows=metric~data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested_wrap(metric~data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_nested_wrap(data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
data <- read.csv(file="input/tech_non_tech_both_datasets.csv", sep = ",")
data=data[data$metric != "MCC",]
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1", "nMCC"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
cols <-function(n) {
colorRampPalette(rev(c("forestgreen", "gold1", "tomato2", "red4", "red2")))(5)
}
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_nested_wrap(data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
data <- read.csv(file="input/tech_non_tech_both_datasets.csv", sep = ",")
data=data[data$metric != "MCC",]
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1", "nMCC"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
cols <-function(n) {
colorRampPalette(rev(c("forestgreen", "gold1", "tomato2", "red4", "red2")))(5)
}
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_nested_wrap(data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_nested_wrap(class_balancing~data) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
#facet_nested(rows=metric~data+class_balancing) +
facet_grid(metric ~ class_balancing, scales='free', space="free")  +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
# Tech/non-tech both datasets
W =  17
H =  7
data <- read.csv(file="input/tech_non_tech_both_datasets.csv", sep = ",")
data=data[data$metric != "MCC",]
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1", "nMCC"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
cols <-function(n) {
colorRampPalette(rev(c("forestgreen", "gold1", "tomato2", "red4", "red2")))(5)
}
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
#facet_grid(metric ~ class_balancing, scales='free', space="free")  +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
ggsave(paste(IMG_DIR,'rq1_tech_non_tech_both_datasets.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_tech_non_tech_both_datasets.png', sep=""), outfile=paste(IMG_DIR,'rq1_tech_non_tech_both_datasets.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_tech_non_tech_both_datasets.png', sep=""), plot = p, width = W, height = H, units = c("in"))
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing, remove_labels=TRUE) +
#facet_grid(metric ~ class_balancing, scales='free', space="free")  +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
W =  17
H =  7
data <- read.csv(file="input/civil_uncivil_both_datasets.csv", sep = ",")
data=data[data$metric != "MCC",]
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1", "nMCC"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
cols <-function(n) {
colorRampPalette(rev(c("forestgreen", "gold1", "tomato2", "red4", "red2")))(5)
}
p <- ggplot(data,
aes(x = model, y = score, fill=score)) +
geom_bar(stat="identity") +
theme_bw() +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(legend.spacing.x = unit(1.0, 'cm')) +
guides(fill = guide_colorbar(title = "Performance scores",
label.position = "bottom",
title.position = "left", title.vjust = 0.75,
frame.colour = "black",
barwidth = 10,
barheight = 1.5)) +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12)) +
scale_fill_gradientn(colours = cols(length(mycols)), breaks=c(0.0, 0.25, 0.50, 0.75, 1.0), labels = c(0.0, 0.25, 0.50, 0.75, 1.0), limits=c(0.0, 1.0)) +
geom_text(aes(label = score), color = "black", size = 3, vjust = -0.1)
p
ggsave(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.png', sep=""), outfile=paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_civil_uncivil_both_datasets.png', sep=""), plot = p, width = W, height = H, units = c("in"))
#-----------------------------------------#
# Per class - Tech/non-tech
W =  17
H =  7
data <- read.csv(file="input/per_class_tech_non_tech_both_datasets.csv", sep = ",")
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
p <- ggplot(data, aes(x = reorder(model, order), y = class1)) +
geom_point(stat="identity",  color = "forestgreen", size = 4, show.legend=TRUE) +
geom_point(aes(y = class0), stat = "identity", color = "tomato2", size = 4, show.legend=TRUE) +
geom_segment(aes(y = 0,
x = model,
yend =  class1,
xend =  model),
color = "forestgreen") + #this function creates the lines leading to points, black
geom_segment(aes(y = 0,
x = model,
yend = class0,
xend = model),
alpha = 0.5,
size = 2,
color = "tomato2") + #this function creates the lines leading to points, red
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
# facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
scale_color_manual(name='Target class',
breaks=c('Technical', 'Non-technical'),
values=c('Technical'='forestgreen', 'Non-technical'='tomato2'))+
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12))
p
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), outfile=paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
#-----------------------------------------#
# Per class - Tech/non-tech
W =  17
H =  7
data <- read.csv(file="input/per_class_tech_non_tech_both_datasets.csv", sep = ",")
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
p <- ggplot(data, aes(x = reorder(model, order), y = class1)) +
geom_point(stat="identity",  color = "forestgreen", size = 4, show.legend=TRUE) +
geom_point(aes(y = class0), stat = "identity", color = "tomato2", size = 4, show.legend=TRUE) +
geom_segment(aes(y = 0,
x = model,
yend =  class1,
xend =  model),
color = "forestgreen") + #this function creates the lines leading to points, black
geom_segment(aes(y = 0,
x = model,
yend = class0,
xend = model),
alpha = 0.5,
size = 2,
color = "tomato2") + #this function creates the lines leading to points, red
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
# facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
scale_color_manual(name='Target class',
breaks=c('Technical', 'Non-technical'),
values=c('Technical'='forestgreen', 'Non-technical'='tomato2'))+
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12))
p
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), outfile=paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), outfile=paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), outfile=paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_per_class_tech_non_tech.png', sep=""), plot = p, width = W, height = H, units = c("in"))
# Per class - Civil/Uncivil
W =  17
H =  7
data <- read.csv(file="input/per_class_civil_uncivil_both_datasets.csv", sep = ",")
data
data <- data[order(data$order),]
data$metric <- factor(data$metric,levels = c("Precision", "Recall", "F1"))
data$model <- as.character(data$model)
data$model <- factor(data$model, levels=unique(data$model))
p <- ggplot(data, aes(x = reorder(model, order), y = class0)) +
geom_point(stat="identity",  color = "tomato2", size = 4, show.legend=TRUE) +
geom_point(aes(y = class1), stat = "identity", color = "forestgreen", size = 4, show.legend=TRUE) +
geom_segment(aes(y = 0,
x = model,
yend =  class0,
xend =  model),
color = "tomato2") +
geom_segment(aes(y = 0,
x = model,
yend = class1,
xend = model),
alpha = 0.5,
size = 2,
color = "forestgreen") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#facet_grid(data$metric ~ data$class_balancing, scales='free', space="free")  +
facet_nested(rows=metric~data+class_balancing) +
scale_color_manual(name='Target class',
breaks=c('Civil', 'Uncivil'),
values=c('Civil'='forestgreen', 'Uncivil'='tomato2')) +
xlab("")+
ylab("Performance scores") +
ylim(0.0, 1.0) +
theme(axis.text.x=element_text(colour="black")) +
theme(axis.text.y=element_text(colour="black")) +
theme(panel.spacing = unit(0.3, "cm")) +
theme(legend.position="bottom") +
theme(strip.text.x = element_text(size = 12), legend.text=element_text(size=12), legend.title=element_text(size=12))
p
ggsave(paste(IMG_DIR,'rq1_per_class_civil_uncivil.png', sep=""), plot = p, width = W, height = H, units = c("in"))
extrafont::embed_fonts(paste(IMG_DIR,'rq1_per_class_civil_uncivil.png', sep=""), outfile=paste(IMG_DIR,'rq1_per_class_civil_uncivil.png', sep=""))
ggsave(paste(IMG_DIR,'rq1_per_class_civil_uncivil.png', sep=""), plot = p, width = W, height = H, units = c("in"))
